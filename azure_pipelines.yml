# azure-pipelines.yml

# Triggers: CI on main and workflow branches, and manual run support
trigger:
  - main

pool:
  name: "Default" # Use the default pool (Self-hosted agents)

variables:
  # Replace with your Docker Hub username
  dockerHubUser: "marwanabdelmoneim"
  imageName: "flask-demo"
  tag: "$(Build.BuildId)"

stages:
  - stage: Test
    displayName: "Run Unit Tests"
    jobs:
      - job: TestJob
        displayName: "Test Flask App"
        steps:
          - script: |
              # 1. Create and activate a virtual environment using your local Python
              echo "--- Creating virtual environment ---"
              python3.12 -m venv .venv
              source .venv/bin/activate

              # 2. Install dependencies into the venv
              echo "--- Installing dependencies ---"
              python3 -m pip install --upgrade pip
              pip3 install -r requirements.txt

              # 3. Set the PYTHONPATH so tests can find the app
              echo "--- Setting PYTHONPATH ---"
              export PYTHONPATH=$(System.DefaultWorkingDirectory)

              # 4. Run the tests
              echo "--- Running tests ---"
              pytest
            displayName: "Install Dependencies and Run Tests"

  - stage: BuildAndPush
    displayName: "Build and Push Docker Image"
    dependsOn: Test # This stage runs only if the 'Test' stage succeeds
    condition: succeeded()
    jobs:
      - job: BuildJob
        displayName: "Build and Push"
        steps:
          - task: Docker@2
            displayName: "Build and push image to Docker Hub"
            inputs:
              containerRegistry: "DockerHubConnection" # Must match your service connection name
              repository: "$(dockerHubUser)/$(imageName)"
              command: "buildAndPush"
              Dockerfile: "**/Dockerfile"
              tags: |
                $(tag)
                latest
